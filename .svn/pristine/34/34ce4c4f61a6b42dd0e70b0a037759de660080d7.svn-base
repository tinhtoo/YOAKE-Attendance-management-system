<?php

namespace App\Http\Controllers\Work_Time;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Http\Requests\WorkTimeRequest;
use App\Repositories\Work_Time\WorkTimeRepository;
use App\Repositories\MT93PgRepository;

class WorkTimeEditorController extends Controller
{
    /**
     * Work_Timeリポジトリの実装
     *
     * @var WorkTimeRepository
     */
    protected $wtime_Repository;

    /**
     * 新しいコントローラインスタンスの生成
     *
     * @param 
     * @return void
     */
    public function __construct(WorkTimeRepository $wtime_Repository
                                , MT93PgRepository $pg_repository)
    {
        parent::__construct($pg_repository);
        $this->wtime_Repository = $wtime_Repository;
    }

    /**
     * 指定画面の表示
     *
     * @param $request
     * @return view
     */
    public function worktimeeditor(Request $request)
    {
        $request->session()->put('empname',$request->input('empName'));
        $request->session()->put('deptname',$request->input('deptName'));
        $table_header_names = $this->wtime_Repository->getHeaderName(); // テーブルヘッダー
        return parent::viewWithMenu('work_time.WorkTimeEditor', compact('table_header_names'));
    }
    /**
     * 指定ユーザーのプロファイル表示
     *
     * @param $request
     * @return Response
     */
    public function search(WorkTimeRequest $request)
    {
        $search_data = $request->all();

        $results = $this->wtime_Repository->select($request); // 対象データ表示
        
        $workdaycnt = $this->wtime_Repository->workdaycnt($request); // 出勤回数の合計
        $holdaycnt = $this->wtime_Repository->holworkcnt($request); // 休出回数の合計
        $spcholcnt = $this->wtime_Repository->spcholcnt($request); // 特休回数の合計
        $padholcnt = $this->wtime_Repository->padholcnt($request); // 有休回数の合計
        $abcworkcnt = $this->wtime_Repository->abcworkcnt($request); // 欠勤回数の合計
        $compdaycnt = $this->wtime_Repository->compdaycnt($request); // 代休回数の合計

        $worktime = $this->wtime_Repository->worktime($request); // 出勤時間
        $tardtime = $this->wtime_Repository->tardtime($request); // 遅刻時間
        $leavetime = $this->wtime_Repository->leavetime($request); // 早退時間
        $outtime = $this->wtime_Repository->outtime($request); // 外出時間
        $ovtm1time = $this->wtime_Repository->ovtm1time($request); // 早出時間
        $ovtm2time = $this->wtime_Repository->ovtm2time($request); // 普通残業時間
        $ovtm3time = $this->wtime_Repository->ovtm3time($request); // 深夜残業時間
        $ovtm4time = $this->wtime_Repository->ovtm4time($request); // 休日残業時間
        $ovtm5time = $this->wtime_Repository->ovtm5time($request); // 休日深夜残業時間
        $ovtm6time = $this->wtime_Repository->ovtm6time($request); // 空
        $ext1time = $this->wtime_Repository->ext1time($request); // 深夜割増
        $ext2time = $this->wtime_Repository->ext2time($request); // 空
        $ext3time = $this->wtime_Repository->ext3time($request); // 空

        $GetSumTimes = $this->wtime_Repository->GetSumTime($request); // 出勤時間、残業項目１～ｎの合計
        $GetSumExtTimes = $this->wtime_Repository->GetSumExtTimes($request); // 割増項目１～ｎの合計

        $messages = $this->wtime_Repository->messages(); // メッセージ表示
        $workptn_names = $this->wtime_Repository->workptns(); // 勤務体系
        $reason_names = $this->wtime_Repository->reasons(); // 事由

        $name = $this->wtime_Repository->name($request);// 部門名・社員名の取得

        $request->session()->put('empname',$request->input('empName'));
        $request->session()->put('deptname',$request->input('deptName'));
        $request->session()->put('emp_cd',$search_data['txtEmpCd']);

        $request->session()->put('date', $search_data['ddlDate']);
        $request->session()->put('emp_cd',$search_data['txtEmpCd']);

        $table_header_names = $this->wtime_Repository->getHeaderName(); // テーブルヘッダー
        
        return parent::viewWithMenu('work_time.WorkTimeEditor', compact('results', 'messages', 'workptn_names', 'reason_names', 'search_data', 
                                                        'workdaycnt', 'holdaycnt', 'spcholcnt', 'padholcnt', 'abcworkcnt', 'compdaycnt',
                                                        'worktime', 'tardtime', 'leavetime', 'outtime', 'ovtm1time', 'ovtm2time', 'ovtm3time', 'ovtm4time', 'ovtm5time', 'ovtm6time',
                                                        'ext1time', 'ext2time', 'ext3time', 'GetSumTimes', 'GetSumExtTimes', 'name', 'table_header_names'));
    }

    /**
     * 時間計算処理
     *
     * @param Request $request
     * @return 時間計算データ
     */
    public function timeCal(Request $request)
    {
        $results = $this->wtime_Repository->timeCal($request); // 対象データ表示
        return $results;
    }

    /**
     * 日数計算処理
     *
     * @param Request $request
     * @return 日数計算データ
     */
    public function dayCal(Request $request)
    {
        $results = $this->wtime_Repository->dayCal($request); // 対象データ表示
        return $results;
    }

    public function cancel(Request $request)
    {
        $data = $request->session()->all();
        if(!empty($data['date'])){
            return redirect()->back()->with('date', $data['date']);
        }else{
            return redirect()->back();
        }
    }

    // public function update(WorkTimeUpdateRequest $request)
    // {
    //     $data = $request->all();

    //     if (!empty($data['worktime'])) {
    //         foreach ($data['worktime'] as $worktime) {
    //             $worktime = getTimeToHhMm($worktime, 'OFC_TIME');
    //             $worktime = getTimeToHhMm($worktime, 'LEV_TIME');
    //             $worktime = getTimeToHhMm($worktime, 'OUT1_TIME');
    //             $worktime = getTimeToHhMm($worktime, 'IN1_TIME');
    //             $worktime = getTimeToHhMm($worktime, 'OUT2_TIME');
    //             $worktime = getTimeToHhMm($worktime, 'IN2_TIME');
    //             $worktime = getTimeToHhMm($worktime, 'WORK_TIME');
    //             $worktime = getTimeToHhMm($worktime, 'TARD_TIME');
    //             $worktime = getTimeToHhMm($worktime, 'LEAVE_TIME');
    //             $worktime = getTimeToHhMm($worktime, 'OUT_TIME');
    //             $worktime = getTimeToHhMm($worktime, 'OVTM1_TIME');
    //             $worktime = getTimeToHhMm($worktime, 'OVTM2_TIME');
    //             $worktime = getTimeToHhMm($worktime, 'OVTM3_TIME');
    //             $worktime = getTimeToHhMm($worktime, 'OVTM4_TIME');
    //             $worktime = getTimeToHhMm($worktime, 'OVTM5_TIME');
    //             $worktime = getTimeToHhMm($worktime, 'OVTM6_TIME');
    //             $worktime = getTimeToHhMm($worktime, 'EXT1_TIME');
    //             $worktime = getTimeToHhMm($worktime, 'EXT2_TIME');
    //             $worktime = getTimeToHhMm($worktime, 'EXT3_TIME');
    //             $worktime = getTimeToHhMm($worktime, 'RSV1_TIME');

    //             TR01Work::where('EMP_CD', $data['txtEmpCd'])
    //                 ->where('CALD_DATE', $worktime['CALD_DATE'])
    //                 ->update($worktime);
                
    //         }
    //         return redirect('/work_time/WorkTimeEditor');
    //     }
    // }
}

