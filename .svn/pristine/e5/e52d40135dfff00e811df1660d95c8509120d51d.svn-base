<?php

namespace App\Http\Controllers\Master;

use App\Http\Controllers\Controller;
use App\Http\Requests\MT10EmpEditorRequest;
use App\Models\MT10Emp;
use App\Models\MT99Msg;
use App\Repositories\Master\MT10EmpRefRepository;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;

class MT10EmpEditorController extends Controller
{
    protected $EmpRef_repository;
    /**
     * コンストラクタ
     * リポジトリのインスタンスを生成、格納
     *
     * @param  UserRepository  $EmpRef_repository
     * @return void
     */
    public function __construct(MT10EmpRefRepository $EmpRef_repository)
    {
        $this->EmpRef_repository = $EmpRef_repository;
    }

    /**
     * 画面表示
     * 引数がない、またはnullの場合は新規登録
     *
     * @param [type] $id
     * @return void
     */
    public function edit($id = null)
    {
        $emp_data = new MT10Emp();
        if ($id != null) {
            $emp_data = $this->EmpRef_repository->edit($id);
        }
        // $login_datas = $this->LoginRef_repository->user($id);
        $reg_cls_cd = $this->EmpRef_repository->regClsCd();
        $msg_1005 = MT99Msg::where('MSG_NO', '1005')->pluck('MSG_CONT')->first();
        return view('master.MT10EmpEditor', compact('emp_data', 'msg_1005', 'reg_cls_cd'));
    }

    public function update(MT10EmpEditorRequest $request)
    {
        $today = date('Y-m-d H:i:s');
        
        $param = [
            'EMP_CD' => $request->EMP_CD,
            'EMP_NAME' => $request->EMP_NAME,
            'EMP_KANA' => $request->EMP_KANA,
            'EMP_ABR' => '',
            'DEPT_CD' => $request->DEPT_CD,
            'ENT_DATE' => $request->ENT_YEAR + $request->ENT_MONTH + $request->ENT_DAY,
            'ENT_YEAR' => $request->ENT_YEAR,
            'ENT_MONTH' => $request->ENT_MONTH,
            'ENT_DAY' => $request->ENT_DAY,
            'RET_DATE' => $request->RET_YEAR + $request->RET_MONTH + $request->RET_DAY,
            'RET_YEAR' => $request->RET_YEAR,
            'RET_MONTH' => $request->RET_MONTH,
            'RET_DAY' => $request->RET_DAY,
            'REG_CLS_CD' => $request->REG_CLS_CD,
            'BIRTH_DATE' => $request->BIRTH_YEAR + $request->BIRTH_MONTH + $request->BIRTH_DAY,
            'BIRTH_YEAR' => $request->BIRTH_YEAR,
            'BIRTH_MONTH' => $request->BIRTH_MONTH,
            'BIRTH_DAY' => $request->BIRTH_DAY,
            'SEX_CLS_CD' => $request->SEX_CLS_CD,
            'EMP_CLS1_CD' => $request->EMP_CLS1_CD,
            'EMP_CLS2_CD' => $request->EMP_CLS2_CD,
            'EMP_CLS3_CD' => '',
            'CALENDAR_CD' => $request->CALENDAR_CD,
            'DEPT_AUTH_CD' => $request->DEPT_AUTH_CD,
            'PG_AUTH_CD' => '',
            'POST_CD' => $request->POST_CD,
            'ADDRESS1' => $request->ADDRESS1,
            'ADDRESS2' => $request->ADDRESS2,
            'TEL' => $request->TEL,
            'CELLULAR' => $request->CELLULAR,
            'MAIL' => $request->MAIL,
            'RSV1_CLS_CD' => '',
            'RSV2_CLS_CD' => '',
            'UPD_DATE' => $today,
            'PH_GRANT' => $request->PH_GRANT_YEAR + $request->PH_GRANT_MONTH,
            'PH_GRANT_YEAR' => $request->PH_GRANT_YEAR,
            'PH_GRANT_MONTH' => $request->PH_GRANT_MONTH,
            'CLOSING_DATE_CD' => $request->CLOSING_DATE_CD,
            'COMPANY_CD' => $request->COMPANY_CD,
            'EMP2_CD' => $request->EMP2_CD,
            'EMP3_CD' => '',
        ];
        return redirect('master/MT10EmpReference');
    }

    public function delete(MT10EmpEditorRequest $request)
    {   
        $delete_result = $this->EmpRef_repository->deleteEmp($request->EMP_CD);
        return redirect('master/MT10EmpReference');
    }
}
