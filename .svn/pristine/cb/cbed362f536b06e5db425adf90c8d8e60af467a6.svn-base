<?php

namespace App\Repositories\Work_Time;

use Illuminate\Http\Request;

use App\Models\TR01Work;
use App\Models\MT05Workptn;
use App\Models\MT09Reason;
use App\Models\MT99Msg;
use App\Models\MT08Holiday;
use App\Models\MT10Emp;
use App\Models\Wk01Work;
use App\Models\MT94WorkDesc;
use App\Models\MT11Login;
use App\Models\TR04WorkTimeFix;
use Log;

class WorkTimeRepository
{

    public function select(Request $request)
    {
        $input = $request->all();
        $procCd = 'SW';
        $logCd = MT11Login::where('LOGIN_ID', session('id'))->pluck('EMP_CD')->first();
        $empCd = $input['txtEmpCd'];
        $year = substr(($input['ddlDate']), 0, 4);
        $month = abs(substr(($input['ddlDate']), 7, 2));

        $totalString = '"' . $procCd . "," . $logCd . "," . $empCd . "," . $year . "," . $month . '"';
        $command = ".\\WorkTmCon\WorkTmCon " . $totalString;
        exec($command, $output, $result_code);
        
        $targetdata = Wk01Work::join('MT05_WORKPTN', 'WK01_WORK.WORKPTN_CD', '=', 'MT05_WORKPTN.WORKPTN_CD')
            ->join('MT09_REASON', 'WK01_WORK.REASON_CD', '=', 'MT09_REASON.REASON_CD')
            ->leftjoin('MT08_HOLIDAY', 'WK01_WORK.CALD_MONTH', 'MT08_HOLIDAY.HLD_MONTH')
            ->where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('EMP_CD', $input['txtEmpCd'])
            ->select('WK01_WORK.*', 'MT05_WORKPTN.WORKPTN_NAME', 'MT05_WORKPTN.WORK_CLS_CD', 'MT09_REASON.REASON_NAME', 'MT09_REASON.REASON_PTN_CD', 'MT08_HOLIDAY.HLD_DATE')
            ->selectRaw("Case When WK01_WORK.OFC_TIME_HH = '0' OR WK01_WORK.OFC_TIME_HH Is Null THEN ''
                        Else Cast(WK01_WORK.OFC_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OFC_TIME_MI As VarChar), 2)
                    End As OFC_TIME")
            ->selectRaw("Case When WK01_WORK.LEV_TIME_HH = '0' OR WK01_WORK.LEV_TIME_HH Is Null Then ''
                        Else Cast(WK01_WORK.LEV_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.LEV_TIME_MI As VarChar), 2)
                    End As LEV_TIME")
            ->selectRaw("Case When WK01_WORK.OUT1_TIME_HH = '0' OR WK01_WORK.OUT1_TIME_HH Is Null Then ''
                        Else Cast(WK01_WORK.OUT1_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OUT1_TIME_MI As VarChar), 2)
                    End As OUT1_TIME")
            ->selectRaw("Case When WK01_WORK.IN1_TIME_HH = '0' OR WK01_WORK.IN1_TIME_HH Is Null Then ''
                        Else Cast(WK01_WORK.IN1_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.IN1_TIME_MI As VarChar), 2)
                    End As IN1_TIME")
            ->selectRaw("Case When WK01_WORK.OUT2_TIME_HH = '0' OR WK01_WORK.OUT2_TIME_HH Is Null Then ''
                        Else Cast(WK01_WORK.OUT2_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OUT2_TIME_MI As VarChar), 2)
                    End As OUT2_TIME")
            ->selectRaw("Case When WK01_WORK.IN2_TIME_HH = '0' OR WK01_WORK.IN2_TIME_HH Is Null Then ''
                        Else Cast(WK01_WORK.IN2_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.IN2_TIME_MI As VarChar), 2)
                    End As IN2_TIME")
            ->selectRaw("Case When WK01_WORK.WORK_TIME_HH + WK01_WORK.WORK_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.WORK_TIME_HH  As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.WORK_TIME_MI  As VarChar), 2)
                    End As WORK_TIME")
            ->selectRaw("Case When WK01_WORK.TARD_TIME_HH + WK01_WORK.TARD_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.TARD_TIME_HH  As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.TARD_TIME_MI  As VarChar), 2)
                    End As TARD_TIME")
            ->selectRaw("Case When WK01_WORK.LEAVE_TIME_HH + WK01_WORK.LEAVE_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.LEAVE_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.LEAVE_TIME_MI As VarChar), 2)
                    End As LEAVE_TIME")
            ->selectRaw("Case When WK01_WORK.OUT_TIME_HH + WK01_WORK.OUT_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.OUT_TIME_HH   As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OUT_TIME_MI   As VarChar), 2)
                    End As OUT_TIME")
            ->selectRaw("Case When WK01_WORK.OVTM1_TIME_HH + WK01_WORK.OVTM1_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.OVTM1_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OVTM1_TIME_MI As VarChar), 2)
                    End As OVTM1_TIME")
            ->selectRaw("Case When WK01_WORK.OVTM2_TIME_HH + WK01_WORK.OVTM2_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.OVTM2_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OVTM2_TIME_MI As VarChar), 2)
                    End As OVTM2_TIME")
            ->selectRaw("Case When WK01_WORK.OVTM3_TIME_HH + WK01_WORK.OVTM3_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.OVTM3_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OVTM3_TIME_MI As VarChar), 2)
                    End As OVTM3_TIME")
            ->selectRaw("Case When WK01_WORK.OVTM4_TIME_HH + WK01_WORK.OVTM4_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.OVTM4_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OVTM4_TIME_MI As VarChar), 2)
                    End As OVTM4_TIME")
            ->selectRaw("Case When WK01_WORK.OVTM5_TIME_HH + WK01_WORK.OVTM5_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.OVTM5_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OVTM5_TIME_MI As VarChar), 2)
                    End As OVTM5_TIME")
            ->selectRaw("Case When WK01_WORK.OVTM6_TIME_HH + WK01_WORK.OVTM6_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.OVTM6_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OVTM6_TIME_MI As VarChar), 2)
                    End As OVTM6_TIME")
            ->selectRaw("Case When WK01_WORK.EXT1_TIME_HH + WK01_WORK.EXT1_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.EXT1_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.EXT1_TIME_MI As VarChar), 2)
                    End As EXT1_TIME")
            ->selectRaw("Case When WK01_WORK.EXT2_TIME_HH + WK01_WORK.EXT2_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.EXT2_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.EXT2_TIME_MI As VarChar), 2)
                    End As EXT2_TIME")
            ->selectRaw("Case When WK01_WORK.EXT3_TIME_HH + WK01_WORK.EXT3_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.EXT3_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.EXT3_TIME_MI As VarChar), 2)
                    End As EXT3_TIME")
            ->get();
        return $targetdata;
    }

    /**
     * 時間計算処理
     *
     * @param Request $request
     * @return Wk01Work
     */
    public function timeCal(Request $request)
    {
        $input = $request->all();

        $ofcTimeHHmm = inputToHHmm($input, 'ofcTime');
        $levTimeHHmm = inputToHHmm($input, 'levTime');
        $out1TimeHHmm = inputToHHmm($input, 'out1Time');
        $in1TimeHHmm = inputToHHmm($input, 'in1Time');
        $out2TimeHHmm = inputToHHmm($input, 'out2Time');
        $in2TimeHHmm = inputToHHmm($input, 'in2Time');   
        $procCd = 'CW';
        $logCd = MT11Login::where('LOGIN_ID', session('id'))->pluck('EMP_CD')->first(); 
        $empCd = $input['txtEmpCd'];
        $year = substr(($input['ddlDate']), 0, 4);
        $month = abs(substr(($input['ddlDate']), 7, 2));
        $caldDate = str_replace('-', '/', $input['calDate']);
        $WorkPtnCd = $input['workPtnCd'];
        $reasonCd = $input['reasonCd'];
        $ofcTime_HH = $ofcTimeHHmm['ofcTime_HH'];
        $ofcTime_mm = $ofcTimeHHmm['ofcTime_mm'] != "" ? abs($ofcTimeHHmm['ofcTime_mm']) : "";
        $levTime_HH = $levTimeHHmm['levTime_HH'];
        $levTime_mm = $levTimeHHmm['levTime_mm'] != "" ? abs($levTimeHHmm['levTime_mm']) : "";
        $out1Time_HH = $out1TimeHHmm['out1Time_HH'];
        $out1Time_mm = $out1TimeHHmm['out1Time_mm'] != "" ? abs($out1TimeHHmm['out1Time_mm']) : "";
        $in1Time_HH = $in1TimeHHmm['in1Time_HH'];
        $in1Time_mm = $in1TimeHHmm['in1Time_mm'] != "" ? abs($in1TimeHHmm['in1Time_mm']) : "";
        $out2Time_HH = $out2TimeHHmm['out2Time_HH'];
        $out2Time_mm = $out2TimeHHmm['out2Time_mm'] != "" ? abs($out2TimeHHmm['out2Time_mm']) : "";
        $in2Time_HH = $in2TimeHHmm['in2Time_HH'];
        $in2Time_mm = $in2TimeHHmm['in2Time_mm'] != "" ? abs($in2TimeHHmm['in2Time_mm']) : "";
        
        $totalString = '"' . $procCd . "," . $logCd . "," . $empCd . "," . $year . "," . $month . ","
                       . $caldDate . "," . $WorkPtnCd . "," .  $reasonCd . "," 
                       .  $ofcTime_HH . "," .  $ofcTime_mm . "," // 出社
                       .  $levTime_HH . "," .  $levTime_mm . "," // 退出
                       .  $out1Time_HH . "," .  $out1Time_mm . "," // 外出1
                       .  $in1Time_HH . "," .  $in1Time_mm . "," // 再入1
                       .  $out2Time_HH . "," .  $out2Time_mm . "," // 外出2
                       .  $in2Time_HH . "," .  $in2Time_mm . '"'; // 再入2

        $command = ".\\WorkTmCon\WorkTmCon " . $totalString;
        exec($command, $output, $result_code);

        $targetdata = Wk01Work::join('MT05_WORKPTN', 'WK01_WORK.WORKPTN_CD', '=', 'MT05_WORKPTN.WORKPTN_CD')
            ->join('MT09_REASON', 'WK01_WORK.REASON_CD', '=', 'MT09_REASON.REASON_CD')
            ->leftjoin('MT08_HOLIDAY', 'WK01_WORK.CALD_MONTH', 'MT08_HOLIDAY.HLD_MONTH')
            ->where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('EMP_CD', $empCd)
            ->where('CALD_DATE', $input['calDate'])
            ->select('WK01_WORK.*', 'MT05_WORKPTN.WORKPTN_NAME', 'MT05_WORKPTN.WORK_CLS_CD', 'MT09_REASON.REASON_NAME', 'MT09_REASON.REASON_PTN_CD', 'MT08_HOLIDAY.HLD_DATE')
            ->selectRaw("Case When WK01_WORK.OFC_TIME_HH = '0' OR WK01_WORK.OFC_TIME_HH Is Null THEN ''
                        Else Cast(WK01_WORK.OFC_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OFC_TIME_MI As VarChar), 2)
                    End As OFC_TIME")
            ->selectRaw("Case When WK01_WORK.LEV_TIME_HH = '0' OR WK01_WORK.LEV_TIME_HH Is Null Then ''
                        Else Cast(WK01_WORK.LEV_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.LEV_TIME_MI As VarChar), 2)
                    End As LEV_TIME")
            ->selectRaw("Case When WK01_WORK.OUT1_TIME_HH = '0' OR WK01_WORK.OUT1_TIME_HH Is Null Then ''
                        Else Cast(WK01_WORK.OUT1_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OUT1_TIME_MI As VarChar), 2)
                    End As OUT1_TIME")
            ->selectRaw("Case When WK01_WORK.IN1_TIME_HH = '0' OR WK01_WORK.IN1_TIME_HH Is Null Then ''
                        Else Cast(WK01_WORK.IN1_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.IN1_TIME_MI As VarChar), 2)
                    End As IN1_TIME")
            ->selectRaw("Case When WK01_WORK.OUT2_TIME_HH = '0' OR WK01_WORK.OUT2_TIME_HH Is Null Then ''
                        Else Cast(WK01_WORK.OUT2_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OUT2_TIME_MI As VarChar), 2)
                    End As OUT2_TIME")
            ->selectRaw("Case When WK01_WORK.IN2_TIME_HH = '0' OR WK01_WORK.IN2_TIME_HH Is Null Then ''
                        Else Cast(WK01_WORK.IN2_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.IN2_TIME_MI As VarChar), 2)
                    End As IN2_TIME")
            ->selectRaw("Case When WK01_WORK.WORK_TIME_HH + WK01_WORK.WORK_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.WORK_TIME_HH  As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.WORK_TIME_MI  As VarChar), 2)
                    End As WORK_TIME")
            ->selectRaw("Case When WK01_WORK.TARD_TIME_HH + WK01_WORK.TARD_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.TARD_TIME_HH  As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.TARD_TIME_MI  As VarChar), 2)
                    End As TARD_TIME")
            ->selectRaw("Case When WK01_WORK.LEAVE_TIME_HH + WK01_WORK.LEAVE_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.LEAVE_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.LEAVE_TIME_MI As VarChar), 2)
                    End As LEAVE_TIME")
            ->selectRaw("Case When WK01_WORK.OUT_TIME_HH + WK01_WORK.OUT_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.OUT_TIME_HH   As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OUT_TIME_MI   As VarChar), 2)
                    End As OUT_TIME")
            ->selectRaw("Case When WK01_WORK.OVTM1_TIME_HH + WK01_WORK.OVTM1_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.OVTM1_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OVTM1_TIME_MI As VarChar), 2)
                    End As OVTM1_TIME")
            ->selectRaw("Case When WK01_WORK.OVTM2_TIME_HH + WK01_WORK.OVTM2_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.OVTM2_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OVTM2_TIME_MI As VarChar), 2)
                    End As OVTM2_TIME")
            ->selectRaw("Case When WK01_WORK.OVTM3_TIME_HH + WK01_WORK.OVTM3_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.OVTM3_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OVTM3_TIME_MI As VarChar), 2)
                    End As OVTM3_TIME")
            ->selectRaw("Case When WK01_WORK.OVTM4_TIME_HH + WK01_WORK.OVTM4_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.OVTM4_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OVTM4_TIME_MI As VarChar), 2)
                    End As OVTM4_TIME")
            ->selectRaw("Case When WK01_WORK.OVTM5_TIME_HH + WK01_WORK.OVTM5_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.OVTM5_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OVTM5_TIME_MI As VarChar), 2)
                    End As OVTM5_TIME")
            ->selectRaw("Case When WK01_WORK.OVTM6_TIME_HH + WK01_WORK.OVTM6_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.OVTM6_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OVTM6_TIME_MI As VarChar), 2)
                    End As OVTM6_TIME")
            ->selectRaw("Case When WK01_WORK.EXT1_TIME_HH + WK01_WORK.EXT1_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.EXT1_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.EXT1_TIME_MI As VarChar), 2)
                    End As EXT1_TIME")
            ->selectRaw("Case When WK01_WORK.EXT2_TIME_HH + WK01_WORK.EXT2_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.EXT2_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.EXT2_TIME_MI As VarChar), 2)
                    End As EXT2_TIME")
            ->selectRaw("Case When WK01_WORK.EXT3_TIME_HH + WK01_WORK.EXT3_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.EXT3_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.EXT3_TIME_MI As VarChar), 2)
                    End As EXT3_TIME")
            ->get();
        return $targetdata;
    }

    /**
     * 日数計算処理
     *
     * @param Request $request
     * @return Wk01Work
     */
    public function dayCal(Request $request)
    {
        $input = $request->all();

        $workTimeHHmm = inputToHHmm($input, 'workTime');
        $ovtm1TimeHHmm = inputToHHmm($input, 'ovtm1Time');
        $ovtm2TimeHHmm = inputToHHmm($input, 'ovtm2Time');
        $ovtm3TimeHHmm = inputToHHmm($input, 'ovtm3Time');
        $ovtm4TimeHHmm = inputToHHmm($input, 'ovtm4Time');
        $ovtm5TimeHHmm = inputToHHmm($input, 'ovtm5Time');
        $ovtm6TimeHHmm = inputToHHmm($input, 'ovtm6Time');
   
        $procCd = 'CD';
        $logCd = MT11Login::where('LOGIN_ID', session('id'))->pluck('EMP_CD')->first(); 
        $empCd = $input['txtEmpCd'];
        $year = substr(($input['ddlDate']), 0, 4);
        $month = abs(substr(($input['ddlDate']), 7, 2));
        $caldDate = str_replace('-', '/', $input['calDate']);
        $WorkPtnCd = $input['workPtnCd'];
        $reasonCd = $input['reasonCd'];

        $workTime_HH = $workTimeHHmm['workTime_HH'];
        $workTime_mm = $workTimeHHmm['workTime_mm'] != "" ? abs($workTimeHHmm['workTime_mm']) : "";

        $ovtm1Time_HH = $ovtm1TimeHHmm['ovtm1Time_HH'];
        $ovtm1Time_mm = $ovtm1TimeHHmm['ovtm1Time_mm'] != "" ? abs($ovtm1TimeHHmm['ovtm1Time_mm']) : "";

        $ovtm2Time_HH = $ovtm2TimeHHmm['ovtm2Time_HH'];
        $ovtm2Time_mm = $ovtm2TimeHHmm['ovtm2Time_mm'] != "" ? abs($ovtm2TimeHHmm['ovtm2Time_mm']) : "";

        $ovtm3Time_HH = $ovtm3TimeHHmm['ovtm3Time_HH'];
        $ovtm3Time_mm = $ovtm3TimeHHmm['ovtm3Time_mm'] != "" ? abs($ovtm3TimeHHmm['ovtm3Time_mm']) : "";
        $ovtm4Time_HH = $ovtm4TimeHHmm['ovtm4Time_HH'];
        $ovtm4Time_mm = $ovtm4TimeHHmm['ovtm4Time_mm'] != "" ? abs($ovtm4TimeHHmm['ovtm4Time_mm']) : "";
        $ovtm5Time_HH = $ovtm5TimeHHmm['ovtm5Time_HH'];
        $ovtm5Time_mm = $ovtm5TimeHHmm['ovtm5Time_mm'] != "" ? abs($ovtm5TimeHHmm['ovtm5Time_mm']) : "";
        $ovtm6Time_HH = $ovtm6TimeHHmm['ovtm6Time_HH'];
        $ovtm6Time_mm = $ovtm6TimeHHmm['ovtm6Time_mm'] != "" ? abs($ovtm6TimeHHmm['ovtm6Time_mm']) : "";
        
        $totalString = '"' . $procCd . "," . $logCd . "," . $empCd . "," . $year . "," . $month . ","
                        . $caldDate . "," . $WorkPtnCd . "," .  $reasonCd . "," 
                        .  $workTime_HH . "," .  $workTime_mm . "," 
                        .  $ovtm1Time_HH . "," .  $ovtm1Time_mm . "," 
                        .  $ovtm2Time_HH . "," .  $ovtm2Time_mm . "," 
                        .  $ovtm3Time_HH . "," .  $ovtm3Time_mm . "," 
                        .  $ovtm4Time_HH . "," .  $ovtm4Time_mm . "," 
                        .  $ovtm5Time_HH . "," .  $ovtm5Time_mm . '"'
                        .  $ovtm6Time_HH . "," .  $ovtm6Time_mm . '"';              

        $command = ".\\WorkTmCon\WorkTmCon " . $totalString;
        exec($command, $output, $result_code);

        $targetdata = Wk01Work::join('MT05_WORKPTN', 'WK01_WORK.WORKPTN_CD', '=', 'MT05_WORKPTN.WORKPTN_CD')
            ->join('MT09_REASON', 'WK01_WORK.REASON_CD', '=', 'MT09_REASON.REASON_CD')
            ->where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('EMP_CD', $empCd)
            ->where('CALD_DATE', $input['calDate'])
            ->select('WK01_WORK.*', 'MT05_WORKPTN.WORKPTN_NAME', 'MT05_WORKPTN.WORK_CLS_CD', 'MT09_REASON.REASON_NAME', 'MT09_REASON.REASON_PTN_CD')
            ->selectRaw("Case When WK01_WORK.OFC_TIME_HH = '0' OR WK01_WORK.OFC_TIME_HH Is Null THEN ''
                        Else Cast(WK01_WORK.OFC_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OFC_TIME_MI As VarChar), 2)
                    End As OFC_TIME")
            ->selectRaw("Case When WK01_WORK.LEV_TIME_HH = '0' OR WK01_WORK.LEV_TIME_HH Is Null Then ''
                        Else Cast(WK01_WORK.LEV_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.LEV_TIME_MI As VarChar), 2)
                    End As LEV_TIME")
            ->selectRaw("Case When WK01_WORK.OUT1_TIME_HH = '0' OR WK01_WORK.OUT1_TIME_HH Is Null Then ''
                        Else Cast(WK01_WORK.OUT1_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OUT1_TIME_MI As VarChar), 2)
                    End As OUT1_TIME")
            ->selectRaw("Case When WK01_WORK.IN1_TIME_HH = '0' OR WK01_WORK.IN1_TIME_HH Is Null Then ''
                        Else Cast(WK01_WORK.IN1_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.IN1_TIME_MI As VarChar), 2)
                    End As IN1_TIME")
            ->selectRaw("Case When WK01_WORK.OUT2_TIME_HH = '0' OR WK01_WORK.OUT2_TIME_HH Is Null Then ''
                        Else Cast(WK01_WORK.OUT2_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OUT2_TIME_MI As VarChar), 2)
                    End As OUT2_TIME")
            ->selectRaw("Case When WK01_WORK.IN2_TIME_HH = '0' OR WK01_WORK.IN2_TIME_HH Is Null Then ''
                        Else Cast(WK01_WORK.IN2_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.IN2_TIME_MI As VarChar), 2)
                    End As IN2_TIME")
            ->selectRaw("Case When WK01_WORK.WORK_TIME_HH + WK01_WORK.WORK_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.WORK_TIME_HH  As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.WORK_TIME_MI  As VarChar), 2)
                    End As WORK_TIME")
            ->selectRaw("Case When WK01_WORK.TARD_TIME_HH + WK01_WORK.TARD_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.TARD_TIME_HH  As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.TARD_TIME_MI  As VarChar), 2)
                    End As TARD_TIME")
            ->selectRaw("Case When WK01_WORK.LEAVE_TIME_HH + WK01_WORK.LEAVE_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.LEAVE_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.LEAVE_TIME_MI As VarChar), 2)
                    End As LEAVE_TIME")
            ->selectRaw("Case When WK01_WORK.OUT_TIME_HH + WK01_WORK.OUT_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.OUT_TIME_HH   As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OUT_TIME_MI   As VarChar), 2)
                    End As OUT_TIME")
            ->selectRaw("Case When WK01_WORK.OVTM1_TIME_HH + WK01_WORK.OVTM1_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.OVTM1_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OVTM1_TIME_MI As VarChar), 2)
                    End As OVTM1_TIME")
            ->selectRaw("Case When WK01_WORK.OVTM2_TIME_HH + WK01_WORK.OVTM2_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.OVTM2_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OVTM2_TIME_MI As VarChar), 2)
                    End As OVTM2_TIME")
            ->selectRaw("Case When WK01_WORK.OVTM3_TIME_HH + WK01_WORK.OVTM3_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.OVTM3_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OVTM3_TIME_MI As VarChar), 2)
                    End As OVTM3_TIME")
            ->selectRaw("Case When WK01_WORK.OVTM4_TIME_HH + WK01_WORK.OVTM4_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.OVTM4_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OVTM4_TIME_MI As VarChar), 2)
                    End As OVTM4_TIME")
            ->selectRaw("Case When WK01_WORK.OVTM5_TIME_HH + WK01_WORK.OVTM5_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.OVTM5_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OVTM5_TIME_MI As VarChar), 2)
                    End As OVTM5_TIME")
            ->selectRaw("Case When WK01_WORK.OVTM6_TIME_HH + WK01_WORK.OVTM6_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.OVTM6_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.OVTM6_TIME_MI As VarChar), 2)
                    End As OVTM6_TIME")
            ->selectRaw("Case When WK01_WORK.EXT1_TIME_HH + WK01_WORK.EXT1_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.EXT1_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.EXT1_TIME_MI As VarChar), 2)
                    End As EXT1_TIME")
            ->selectRaw("Case When WK01_WORK.EXT2_TIME_HH + WK01_WORK.EXT2_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.EXT2_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.EXT2_TIME_MI As VarChar), 2)
                    End As EXT2_TIME")
            ->selectRaw("Case When WK01_WORK.EXT3_TIME_HH + WK01_WORK.EXT3_TIME_MI = 0 Then ''
                        Else Cast(WK01_WORK.EXT3_TIME_HH As VarChar) + ':' + RIGHT('00' + Cast(WK01_WORK.EXT3_TIME_MI As VarChar), 2)
                    End As EXT3_TIME")
            ->get();
            
        return $targetdata;
    }

    /**
     * 確定済みのチャック
     * @return WorkTimeController
     */
    public function confirmCheck(Request $request)
    {
        $input = $request->all();
        $year = substr(($input['ddlDate']), 0, 4);
        $month = abs(substr(($input['ddlDate']), 7, 2));
        $deptClsDate1 = MT10Emp::where('MT10_EMP.EMP_CD', $input['txtEmpCd'])->pluck('DEPT_CD')->first();
        $deptClsDate2 = MT10Emp::where('MT10_EMP.EMP_CD', $input['txtEmpCd'])->pluck('CLOSING_DATE_CD')->first();

        $confirmCheck = TR04WorkTimeFix::where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('CLOSING_DATE_CD', $deptClsDate2)
            ->where('DEPT_CD', $deptClsDate1)
            ->first();
        return $confirmCheck;
    }

    
    /**
     * 社員番号と対象年月度で検索
     *
     * @param Request $request
     * @return WorkTimeController
     */
    public function getWithEmpAndYearMonth($emp_cd, $cald_year, $cald_month)
    {   
        return Wk01Work::where('CALD_YEAR', $cald_year)
            ->where('CALD_MONTH', $cald_month)
            ->where('EMP_CD', $emp_cd)
            ->get();
    }

    //出勤回数の合計
    public function workdaycnt(Request $request)
    {
        $input = $request->all();
        $year = substr(($input['ddlDate']), 0, 4);
        $month = abs(substr(($input['ddlDate']), 7, 2));
        
        $workdaycnt = Wk01Work::where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('EMP_CD', $input['txtEmpCd'])
            ->selectraw('Sum(WORKDAY_CNT) as SUM_WORKDAY_CNT')
            ->first();
        return $workdaycnt;
    }

    //休出回数の合計
    public function holworkcnt(Request $request)
    {
        $input = $request->all();
        $year = substr(($input['ddlDate']), 0, 4);
        $month = abs(substr(($input['ddlDate']), 7, 2));

        $holworkcnt = TR01Work::where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('EMP_CD', $input['txtEmpCd'])
            ->selectRaw('Sum(HOLWORK_CNT) as SUM_HOLWORK_CNT')
            ->first();
        return $holworkcnt;      
    }

    //特休回数の合計
    public function spcholcnt(Request $request)
    {
        $input = $request->all();
        $year = substr(($input['ddlDate']), 0, 4);
        $month = abs(substr(($input['ddlDate']), 7, 2));

        $spcholcnt = Wk01Work::where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('EMP_CD', $input['txtEmpCd'])
            ->selectRaw('Sum(SPCHOL_CNT) as SUM_SPCHOL_CNT')
            ->first();

        return $spcholcnt; 
    }

    //有休回数の合計
    public function padholcnt(Request $request)
    {
        $input = $request->all();
        $year = substr(($input['ddlDate']), 0, 4);
        $month = abs(substr(($input['ddlDate']), 7, 2));

        $padholcnt = Wk01Work::where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('EMP_CD', $input['txtEmpCd'])
            ->selectRaw('Sum(PADHOL_CNT) as SUM_PADHOL_CNT')
            ->first();

        return $padholcnt;
    }

    //欠勤回数の合計
    public function abcworkcnt(Request $request)
    {
        $input = $request->all();
        $year = substr(($input['ddlDate']), 0, 4);
        $month = abs(substr(($input['ddlDate']), 7, 2));

        $abcworkcnt = Wk01Work::where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('EMP_CD', $input['txtEmpCd'])
            ->selectRaw('Sum(ABCWORK_CNT) as SUM_ABCWORK_CNT')
            ->first();
            
        return $abcworkcnt;
    }

    //代休回数の合計
    public function compdaycnt(Request $request)
    {
        $input = $request->all();
        $year = substr(($input['ddlDate']), 0, 4);
        $month = abs(substr(($input['ddlDate']), 7, 2));

        $compdaycnt = Wk01Work::where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('EMP_CD', $input['txtEmpCd'])
            ->selectRaw('Sum(COMPDAY_CNT) as SUM_COMPDAY_CNT')
            ->first();

        return $compdaycnt;
    }

    //出勤時間の合計
    public function worktime(Request $request)
    {
        $input = $request->all();
        $year = substr(($input['ddlDate']), 0, 4);
        $month = abs(substr(($input['ddlDate']), 7, 2));

        $worktime = Wk01Work::where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('EMP_CD', $input['txtEmpCd'])
            ->selectRaw("Cast(IsNull(Sum(WORK_TIME_HH), 0) + IsNull(Sum(WORK_TIME_MI) / 60, 0) As VarChar) + ':' + Right('00' + Cast(IsNull(Sum(WORK_TIME_MI) % 60, 0) As VarChar), 2) SUM_WORK_TIME")
            ->first();

        return $worktime;
    }

    //遅刻時間の合計
    public function tardtime(Request $request)
    {
        $input = $request->all();
        $year = substr(($input['ddlDate']), 0, 4);
        $month = abs(substr(($input['ddlDate']), 7, 2));

        $tardtime = Wk01Work::where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('EMP_CD', $input['txtEmpCd'])
            ->selectRaw("Cast(IsNull(Sum(TARD_TIME_HH), 0) + IsNull(Sum(TARD_TIME_MI) / 60, 0) As VarChar) + ':' + Right('00' + Cast(IsNull(Sum(TARD_TIME_MI) % 60, 0) As VarChar), 2) SUM_TARD_TIME")
            ->first();
            
        return $tardtime;
    }

    //早退時間の合計
    public function leavetime(Request $request)
    {
        $input = $request->all();
        $year = substr(($input['ddlDate']), 0, 4);
        $month = abs(substr(($input['ddlDate']), 7, 2));

        $leavetime = Wk01Work::where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('EMP_CD', $input['txtEmpCd'])
            ->selectRaw("Cast(IsNull(Sum(LEAVE_TIME_HH), 0) + IsNull(Sum(LEAVE_TIME_MI) / 60, 0) As VarChar) + ':' + Right('00' + Cast(IsNull(Sum(LEAVE_TIME_MI) % 60, 0) As VarChar), 2) SUM_LEAVE_TIME")
            ->first();
            
        return $leavetime;
    }

    //外出時間の合計
    public function outtime(Request $request)
    {
        $input = $request->all();
        $year = substr(($input['ddlDate']), 0, 4);
        $month = abs(substr(($input['ddlDate']), 7, 2));

        $outtime = Wk01Work::where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('EMP_CD', $input['txtEmpCd'])
            ->selectRaw("Cast(IsNull(Sum(OUT_TIME_HH), 0) + IsNull(Sum(OUT_TIME_MI) / 60, 0) As VarChar) + ':' + Right('00' + Cast(IsNull(Sum(OUT_TIME_MI) % 60, 0) As VarChar), 2) SUM_OUT_TIME")
            ->first();
            
        return $outtime;
    }

    //早出時間の合計
    public function ovtm1time(Request $request)
    {
        $input = $request->all();
        $year = substr(($input['ddlDate']), 0, 4);
        $month = abs(substr(($input['ddlDate']), 7, 2));

        $ovtm1time = Wk01Work::where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('EMP_CD', $input['txtEmpCd'])
            ->selectRaw("Cast(IsNull(Sum(OVTM1_TIME_HH), 0) + IsNull(Sum(OVTM1_TIME_MI) / 60, 0) As VarChar) + ':' + Right('00' + Cast(IsNull(Sum(OVTM1_TIME_MI) % 60, 0) As VarChar), 2) SUM_OVTM1_TIME")
            ->first();
            
        return $ovtm1time;
    }

    //普通残業時間の合計
    public function ovtm2time(Request $request)
    {
        $input = $request->all();
        $year = substr(($input['ddlDate']), 0, 4);
        $month = abs(substr(($input['ddlDate']), 7, 2));

        $ovtm2time = Wk01Work::where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('EMP_CD', $input['txtEmpCd'])
            ->selectRaw("Cast(IsNull(Sum(OVTM2_TIME_HH), 0) + IsNull(Sum(OVTM2_TIME_MI) / 60, 0) As VarChar) + ':' + Right('00' + Cast(IsNull(Sum(OVTM2_TIME_MI) % 60, 0) As VarChar), 2) SUM_OVTM2_TIME")
            ->first();
            
        return $ovtm2time;
    }

    //深夜残業時間の合計
    public function ovtm3time(Request $request)
    {
        $input = $request->all();
        $year = substr(($input['ddlDate']), 0, 4);
        $month = abs(substr(($input['ddlDate']), 7, 2));

        $ovtm3time = Wk01Work::where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('EMP_CD', $input['txtEmpCd'])
            ->selectRaw("Cast(IsNull(Sum(OVTM3_TIME_HH), 0) + IsNull(Sum(OVTM3_TIME_MI) / 60, 0) As VarChar) + ':' + Right('00' + Cast(IsNull(Sum(OVTM3_TIME_MI) % 60, 0) As VarChar), 2) SUM_OVTM3_TIME")
            ->first();
            
        return $ovtm3time;
    }

    //休日残業時間の合計
    public function ovtm4time(Request $request)
    {
        $input = $request->all();
        $year = substr(($input['ddlDate']), 0, 4);
        $month = abs(substr(($input['ddlDate']), 7, 2));

        $ovtm4time = Wk01Work::where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('EMP_CD', $input['txtEmpCd'])
            ->selectRaw("Cast(IsNull(Sum(OVTM4_TIME_HH), 0) + IsNull(Sum(OVTM4_TIME_MI) / 60, 0) As VarChar) + ':' + Right('00' + Cast(IsNull(Sum(OVTM4_TIME_MI) % 60, 0) As VarChar), 2) SUM_OVTM4_TIME")
            ->first();
            
        return $ovtm4time;
    }

    //休日深夜残業時間の合計
    public function ovtm5time(Request $request)
    {
        $input = $request->all();
        $year = substr(($input['ddlDate']), 0, 4);
        $month = abs(substr(($input['ddlDate']), 7, 2));

        $ovtm5time = Wk01Work::where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('EMP_CD', $input['txtEmpCd'])
            ->selectRaw("Cast(IsNull(Sum(OVTM5_TIME_HH), 0) + IsNull(Sum(OVTM5_TIME_MI) / 60, 0) As VarChar) + ':' + Right('00' + Cast(IsNull(Sum(OVTM5_TIME_MI) % 60, 0) As VarChar), 2) SUM_OVTM5_TIME")
            ->first();
            
        return $ovtm5time;
    }

    //残業項目６の合計(空)
    public function ovtm6time(Request $request)
    {
        $input = $request->all();
        $year = substr(($input['ddlDate']), 0, 4);
        $month = abs(substr(($input['ddlDate']), 7, 2));

        $ovtm6time = Wk01Work::where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('EMP_CD', $input['txtEmpCd'])
            ->selectRaw("Cast(IsNull(Sum(OVTM6_TIME_HH), 0) + IsNull(Sum(OVTM6_TIME_MI) / 60, 0) As VarChar) + ':' + Right('00' + Cast(IsNull(Sum(OVTM6_TIME_MI) % 60, 0) As VarChar), 2) SUM_OVTM6_TIME")
            ->first();
            
        return $ovtm6time;
    }

    //深夜割増
    public function ext1time(Request $request)
    {
        $input = $request->all();
        $year = substr(($input['ddlDate']), 0, 4);
        $month = abs(substr(($input['ddlDate']), 7, 2));

        $ext1time = Wk01Work::where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('EMP_CD', $input['txtEmpCd'])
            ->selectRaw("Cast(IsNull(Sum(EXT1_TIME_HH), 0) + IsNull(Sum(EXT1_TIME_MI) / 60, 0) As VarChar) + ':' + Right('00' + Cast(IsNull(Sum(EXT1_TIME_MI) % 60, 0) As VarChar), 2) SUM_EXT1_TIME")
            ->first();
            
        return $ext1time;
    }

    //割増項目２の合計(空)
    public function ext2time(Request $request)
    {
        $input = $request->all();
        $year = substr(($input['ddlDate']), 0, 4);
        $month = abs(substr(($input['ddlDate']), 7, 2));

        $ext2time = Wk01Work::where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('EMP_CD', $input['txtEmpCd'])
            ->selectRaw("Cast(IsNull(Sum(EXT2_TIME_HH), 0) + IsNull(Sum(EXT2_TIME_MI) / 60, 0) As VarChar) + ':' + Right('00' + Cast(IsNull(Sum(EXT2_TIME_MI) % 60, 0) As VarChar), 2) SUM_EXT2_TIME")
            ->first();
            
        return $ext2time;
    }

    //割増項目3の合計(空)
    public function ext3time(Request $request)
    {
        $input = $request->all();
        $year = substr(($input['ddlDate']), 0, 4);
        $month = (substr(($input['ddlDate']), 7, 2));

        $ext3time = TR01Work::where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('EMP_CD', $input['txtEmpCd'])
            ->selectRaw("Cast(IsNull(Sum(EXT3_TIME_HH), 0) + IsNull(Sum(EXT3_TIME_MI) / 60, 0) As VarChar) + ':' + Right('00' + Cast(IsNull(Sum(EXT3_TIME_MI) % 60, 0) As VarChar), 2) SUM_EXT3_TIME")
            ->first();
            
        return $ext3time;
    }

    //出勤時間、残業項目１～ｎの合計
    public function GetSumTime(Request $request)
    {
        $input = $request->all();
        $year = substr(($input['ddlDate']), 0, 4);
        $month = abs(substr(($input['ddlDate']), 7, 2));

        $sumtime = Wk01Work::where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('EMP_CD', $input['txtEmpCd'])
            ->selectRaw("Cast(IsNull(Sum(WORK_TIME_HH) + Sum(OVTM1_TIME_HH) + Sum(OVTM2_TIME_HH) + Sum(OVTM3_TIME_HH) + Sum(OVTM4_TIME_HH) + Sum(OVTM5_TIME_HH) + Sum(OVTM6_TIME_HH),0) +
                         IsNull((Sum(WORK_TIME_MI) + Sum(OVTM1_TIME_MI)  + Sum(OVTM2_TIME_MI) + Sum(OVTM3_TIME_MI) + Sum(OVTM4_TIME_MI) + Sum(OVTM5_TIME_MI) + Sum(OVTM6_TIME_MI)) /60, 0) As VarChar) + ':' + 
                         Right('00' + Cast(IsNull((Sum(WORK_TIME_MI) + Sum(OVTM1_TIME_MI)  + Sum(OVTM2_TIME_MI) + Sum(OVTM3_TIME_MI) + Sum(OVTM4_TIME_MI) + Sum(OVTM5_TIME_MI) + Sum(OVTM6_TIME_MI)) % 60, 0) As VarChar), 2) SUM_TIMES")
            ->first();
            
        return $sumtime;
    }
    
    //割増項目１～ｎの合計
    public function GetSumExtTimes(Request $request)
    {
        $input = $request->all();
        $year = substr(($input['ddlDate']), 0, 4);
        $month = abs(substr(($input['ddlDate']), 7, 2));

        $sumext_time = Wk01Work::where('CALD_YEAR', (int)$year)
            ->where('CALD_MONTH', (int)$month)
            ->where('EMP_CD', $input['txtEmpCd'])
            ->selectRaw("Cast(IsNull(Sum(EXT1_TIME_HH) + Sum(EXT2_TIME_HH) + Sum(EXT3_TIME_HH),0) +
                         IsNull((Sum(EXT1_TIME_MI) + Sum(EXT2_TIME_MI)  + Sum(EXT3_TIME_MI)) /60, 0) As VarChar) + ':' + 
                         Right('00' + Cast(IsNull((Sum(EXT1_TIME_MI) + Sum(EXT2_TIME_MI)  + Sum(EXT3_TIME_MI)) % 60, 0) As VarChar), 2) SUM_EXT_TIMES")
            ->first();
            
        return $sumext_time;
    }

    //メッセージ表示
    public function messages()
    {
        $msg_4029 = MT99Msg::where('MSG_NO', '4029')->pluck('MSG_CONT')->first();
        return $msg_4029;
    }

    //勤務体系の取得 
    public function workptns()
    {
        $workptn_names = MT05Workptn::all();
        return $workptn_names;
    }

    //自由の取得
    public function reasons()
    {
        $reason_names = MT09Reason::all();
        return $reason_names;
    }

    //フォント色更新処理
    public function holidays()
    {
        $hld_dates = MT08Holiday::pluck('HLD_DATE');

        return $hld_dates;
    }

    public function getHeaderName()
    {
        $work_desc_cls_cd02 = MT94WorkDesc::select('WORK_DESC_CD', 'WORK_DESC_NAME', 'WORK_DESC_CLS_CD')
            ->where('WORK_DESC_CLS_CD', '02');

        return MT94WorkDesc::select('WORK_DESC_CD', 'WORK_DESC_NAME', 'WORK_DESC_CLS_CD')
            ->where('WORK_DESC_CLS_CD', '01')
            ->unionAll($work_desc_cls_cd02)
            ->get();
    }
}
