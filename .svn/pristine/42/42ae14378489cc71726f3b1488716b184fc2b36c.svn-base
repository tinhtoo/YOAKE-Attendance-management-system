<?php

namespace App\Http\Controllers\Master;

use App\Http\Controllers\Controller;
use App\Http\Requests\MT01ControlEditorRequest;//クラス宣言
use Illuminate\Http\Request;
use App\Models\MT01Control;
use App\Models\MT99Msg;
use App\Models\MT91ClsDetail;

use App\Repositories\MT93PgRepository;

class MT01ControlEditorController extends Controller
{
    public function __construct(MT93PgRepository $pg_repository)
    {
        parent::__construct($pg_repository);
    }

    public function index()
    {
        //クエリビルダ,全件取得
        $query = MT01Control::all();

        //月度リストボックスを取得
        $mt91list = MT91ClsDetail::where('CLS_CD','06')->orderBy('CLS_DETAIL_CD','ASC')->get();

        //dd($mt91list);

        //1005メッセージ取得（更新しますか？）
        $msg_1005 = MT99Msg::where('MSG_NO', '1005')->pluck('MSG_CONT')->first();

        // ビューに変数を渡す
        return parent::viewWithMenu('master.MT01ControlEditor',['item' => $query,'monthlist' => $mt91list,'msg' => $msg_1005 ]);
    }



     public function update(MT01ControlEditorRequest $request){
       //入力したデータを受け取る
       $inputs = $request->all();

       //CONTROL_CD=1を修正
       $data = MT01Control::find($request->CONTROL_CD);

        //新規登録
        if($data == null){
            $data = new MT01Control;
            $data->CONTROL_CD  = 1;
            if($request->REMARK1 == null){
                $request->REMARK1="";
                $data->REMARK1 = $request->REMARK1;
            }else{
                $data->REMARK1  = $request->REMARK1;
            }

            if($request->REMARK2 == null){
                $request->REMARK2="";
                $data->REMARK2 = $request->REMARK2;
            }else{
                $data->REMARK2  = $request->REMARK2;
            }

            if($request->EMPFILE_PATH == null){
                $request->EMPFILE_PATH="";
                $data->EMPFILE_PATH = $request->EMPFILE_PATH;
            }else{
                $data->EMPFILE_PATH  = $request->EMPFILE_PATH;
            }

            if($request->RSV1_PATH == null){
                $request->RSV1_PATH="";
                $data->RSV1_PATH = $request->RSV1_PATH;
            }else{
                $data->RSV1_PATH  = $request->RSV1_PATH;
            }

            if($request->RSV2_PATH == null){
                $request->RSV2_PATH="";
                $data->RSV2_PATH = $request->RSV2_PATH;
            }else{
                $data->RSV2_PATH  = $request->RSV2_PATH;
            }

            if($request->ADD_ZERO_NUM == null){
                $request->ADD_ZERO_NUM=1;
                $data->ADD_ZERO_NUM = $request->ADD_ZERO_NUM;
            }else{
                $data->ADD_ZERO_NUM  = $request->ADD_ZERO_NUM;
            }

            if($request->COMNT2 == null){
                $request->COMNT2="";
                $data->COMNT2 = $request->COMNT2;
            }else{
                $data->COMNT2  = $request->COMNT2;
            }

            if($request->COMNT3 == null){
                $request->COMNT3="";
                $data->COMNT3 = $request->COMNT3;
            }else{
                $data->COMNT3  = $request->COMNT3;
            }
        }
        //新規・修正
        //CONTROL_CDは1固定
        $request->CONTROL_CD=1;
        $data->CONTROL_CD = $request->CONTROL_CD;

        $data->COMPANY_NAME = $request->COMPANY_NAME;
        $data->COMPANY_KANA = $request->COMPANY_KANA;
        $data->COMPANY_ABR_NAME = $request->COMPANY_ABR_NAME;
        //空白時は空文字
        if($request->POST_CD == null){
            $request->POST_CD ="";
            $data->POST_CD  = $request->POST_CD ;
        }else{
            $data->POST_CD   = $request->POST_CD ;
        }

        if($request->ADDRESS1 == null){
            $request->ADDRESS1 ="";
            $data->ADDRESS1  = $request->ADDRESS1 ;
        }else{
            $data->ADDRESS1   = $request->ADDRESS1 ;
        }

        if($request->ADDRESS2 == null){
            $request->ADDRESS2 ="";
            $data->ADDRESS2  = $request->ADDRESS2 ;
        }else{
            $data->ADDRESS2   = $request->ADDRESS2 ;
        }

        if($request->ADDRESS3 == null){
            $request->ADDRESS3 ="";
            $data->ADDRESS3  = $request->ADDRESS3 ;
        }else{
            $data->ADDRESS3   = $request->ADDRESS3 ;
        }

        if($request->TEL == null){
            $request->TEL ="";
            $data->TEL  = $request->TEL ;
        }else{
            $data->TEL   = $request->TEL ;
        }


        if($request->FAX == null){
            $request->FAX ="";
            $data->FAX  = $request->FAX ;
        }else{
            $data->FAX   = $request->FAX;
        }

        if($request->MAIL == null){
            $request->MAIL ="";
            $data->MAIL  = $request->MAIL ;
        }else{
            $data->MAIL   = $request->MAIL;
        }

        if($request->URL == null){
            $request->URL ="";
            $data->URL = $request->URL ;
        }else{
            $data->URL   = $request->URL;
        }

        //選択されている締日コード
        $data->CLOSING_DATE = $request->CLOSING_DATE;
        //選択されているコード
        $data->MONTH_CLS_CD = $request->MONTH_CLS_CD;
        //選択されている月
        $data->TERM_STR_MONTH = $request-> TERM_STR_MONTH;

        //空白時空文字
        if($request->RSV1_CLS_CD == null){
            $request->RSV1_CLS_CD ="";
            $data->RSV1_CLS_CD = $request->RSV1_CLS_CD ;
        }else{
            $data->RSV1_CLS_CD   = $request->RSV1_CLS_CD;
        }

        //空白時空文字
        if($request->RSV2_CLS_CD == null){
            $request->RSV2_CLS_CD ="";
            $data->RSV2_CLS_CD = $request->RSV2_CLS_CD ;
        }else{
            $data->RSV2_CLS_CD   = $request->RSV2_CLS_CD;
        }
        //日付
        date_default_timezone_set('Asia/Tokyo');
        $data->UPD_DATE = now();
        //1で固定
        $data->ADD_ZERO_NUM = 1;

        //空白時空文字
        if($request->COMNT1 == null){
            $request->COMNT1 ="";
            $data->COMNT1 = $request->COMNT1 ;
        }else{
            $data->COMNT1   = $request->COMNT1;
        }
       $data->timestamps = false;
       $data->save();

       return redirect('master/MT01ControlEditor');
     }



    }



