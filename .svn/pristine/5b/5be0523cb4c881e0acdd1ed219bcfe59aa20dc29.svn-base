<?php

namespace App\Repositories;

use App\Models\TR01Work;

use Illuminate\Foundation\Testing\DatabaseTransactions;
use Illuminate\Support\Collection;
use Illuminate\Support\Facades\DB;


class TR01WorkRepository extends TR01Work
{
    public function getWithEmpAndCaldYearMonth($emp_cd, $cald_year, $cald_month)
    {
        return TR01Work::where('EMP_CD', $emp_cd)
                    ->where('CALD_YEAR', $cald_year)
                    ->where('CALD_MONTH', (int)$cald_month)
                    ->get();
    }

    public function getWithPrimaryKey($emp_cd, $cald_date)
    {
        return TR01Work::where('EMP_CD', $emp_cd)
                    ->where('CALD_DATE', $cald_date)
                    ->first();
    }

    public function existWithEmpAndCaldYearMonth($emp_cd, $cald_year, $cald_month)
    {
        return TR01Work::where('EMP_CD', $emp_cd)
                    ->where('CALD_YEAR', $cald_year)
                    ->where('CALD_MONTH', (int)$cald_month)
                    ->exists();
    }

    public function insertWork($record)
    {
        return TR01Work::insert($record);
    }

    public function updateWithKey($emp_cd, $cald_date, $udpate_data)
    {
        return TR01Work::where('EMP_CD', $emp_cd)
                        ->where('CALD_DATE', $cald_date)
                        ->update($udpate_data);
    }

    public function updateWithKeyAndNotFix($emp_cd, $cald_date, $udpate_data)
    {
        return TR01Work::where('EMP_CD', $emp_cd)
                        ->where('CALD_DATE', $cald_date)
                        ->where('UPD_CLS_CD', '00')
                        ->where('FIX_CLS_CD', '00')
                        ->update($udpate_data);
    }

    /**
     * 就業情報を確定させる
     * .netの実装より、退職かの判定は行っていない（退職者にも就業情報の確定を行う可能性があるため？）
     *
     * @param [type] $year
     * @param [type] $month
     * @param [type] $closing_date_cd
     * @param [type] $dept_cd_list
     * @param [type] $today
     * @return void
     */
    public function updateForFix($year, $month, $closing_date_cd, $dept_cd_list, $today) 
    {
        return TR01Work::from('TR01_WORK as TR01')
                        ->leftJoin('MT10_EMP as MT10', 'TR01.EMP_CD', '=', 'MT10.EMP_CD')
                        ->where('TR01.CALD_YEAR', $year)
                        ->where('TR01.CALD_MONTH', $month)
                        ->where('MT10.CLOSING_DATE_CD', $closing_date_cd)
                        ->whereIn('MT10.DEPT_CD', $dept_cd_list)
                        ->update([
                            'FIX_CLS_CD' => '01',
                            'UPD_DATE' => $today
                        ]);
    }
}
